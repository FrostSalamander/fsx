DarkRadiant Map Information File Version 2
{
	MapProperties
	{
		KeyValue { "EditTimeInSeconds" "39017" } 
		KeyValue { "LastCameraAngle" "-29.1 339.6 0" } 
		KeyValue { "LastCameraPosition" "-303.097 -0.951487 455.875" } 
		KeyValue { "LastShaderClipboardMaterial" "textures/darkmod/stone/brick/pillar_bricks01" } 
	}
	SelectionSets
	{
	}
	MapEditTimings
	{
		TotalSecondsEdited { 39017 }
	}
	SelectionGroups
	{
		SelectionGroup 2 { "" }
		SelectionGroup 6 { "" }
		SelectionGroup 8 { "" }
		SelectionGroup 1597 { "" }
		SelectionGroup 1599 { "" }
		SelectionGroup 1601 { "" }
		SelectionGroup 1602 { "" }
		SelectionGroup 1603 { "" }
		SelectionGroup 1604 { "" }
		SelectionGroup 1608 { "" }
		SelectionGroup 1609 { "" }
		SelectionGroup 1610 { "" }
		SelectionGroup 1611 { "" }
		SelectionGroup 1612 { "" }
		SelectionGroup 1613 { "" }
		SelectionGroup 1617 { "" }
		SelectionGroup 1618 { "" }
		SelectionGroup 1620 { "" }
		SelectionGroup 1621 { "" }
		SelectionGroup 1622 { "" }
		SelectionGroup 1623 { "" }
		SelectionGroup 1624 { "" }
		SelectionGroup 1626 { "" }
		SelectionGroup 1628 { "" }
		SelectionGroup 1629 { "" }
		SelectionGroup 1630 { "" }
		SelectionGroup 1631 { "" }
		SelectionGroup 1632 { "" }
		SelectionGroup 1634 { "" }
		SelectionGroup 1635 { "" }
		SelectionGroup 1636 { "" }
		SelectionGroup 1637 { "" }
		SelectionGroup 1639 { "" }
		SelectionGroup 1640 { "" }
		SelectionGroup 1641 { "" }
		SelectionGroup 1642 { "" }
		SelectionGroup 1643 { "" }
		SelectionGroup 1644 { "" }
		SelectionGroup 1645 { "" }
		SelectionGroup 1646 { "" }
		SelectionGroup 1647 { "" }
		SelectionGroup 1648 { "" }
		SelectionGroup 1649 { "" }
	}
	SelectionGroupNodeMapping
	{
		Node { ( 0 0 ) ( 2 ) } // brush (Brush)
		Node { ( 0 1 ) ( 2 ) } // brush (Brush)
		Node { ( 0 2 ) ( 2 ) } // brush (Brush)
		Node { ( 0 3 ) ( 2 ) } // brush (Brush)
		Node { ( 0 4 ) ( 2 ) } // brush (Brush)
		Node { ( 0 5 ) ( 2 ) } // brush (Brush)
		Node { ( 0 7 ) ( 1644 ) } // brush (Brush)
		Node { ( 0 8 ) ( 1629 ) } // brush (Brush)
		Node { ( 0 9 ) ( 1644 ) } // brush (Brush)
		Node { ( 0 10 ) ( 1629 ) } // brush (Brush)
		Node { ( 0 11 ) ( 1629 ) } // brush (Brush)
		Node { ( 0 12 ) ( 8 ) } // brush (Brush)
		Node { ( 0 13 ) ( 8 ) } // brush (Brush)
		Node { ( 0 14 ) ( 8 ) } // brush (Brush)
		Node { ( 0 15 ) ( 8 ) } // brush (Brush)
		Node { ( 0 16 ) ( 8 ) } // brush (Brush)
		Node { ( 0 17 ) ( 8 ) } // brush (Brush)
		Node { ( 0 18 ) ( 8 ) } // brush (Brush)
		Node { ( 0 19 ) ( 1644 ) } // brush (Brush)
		Node { ( 0 20 ) ( 1644 ) } // brush (Brush)
		Node { ( 0 21 ) ( 1644 ) } // brush (Brush)
		Node { ( 0 22 ) ( 1644 ) } // brush (Brush)
		Node { ( 0 23 ) ( 1644 ) } // brush (Brush)
		Node { ( 0 24 ) ( 1644 ) } // brush (Brush)
		Node { ( 0 25 ) ( 1644 ) } // brush (Brush)
		Node { ( 0 26 ) ( 1644 ) } // brush (Brush)
		Node { ( 0 27 ) ( 1644 ) } // brush (Brush)
		Node { ( 0 28 ) ( 1601 1644 ) } // brush (Brush)
		Node { ( 0 29 ) ( 1601 1644 ) } // brush (Brush)
		Node { ( 0 30 ) ( 1601 1644 ) } // patch (Patch)
		Node { ( 0 31 ) ( 1601 1644 ) } // patch (Patch)
		Node { ( 0 32 ) ( 1601 1644 ) } // patch (Patch)
		Node { ( 0 33 ) ( 1601 1644 ) } // patch (Patch)
		Node { ( 0 34 ) ( 1601 1644 ) } // patch (Patch)
		Node { ( 0 35 ) ( 1601 1644 ) } // patch (Patch)
		Node { ( 0 36 ) ( 1601 1644 ) } // patch (Patch)
		Node { ( 0 37 ) ( 1601 1644 ) } // patch (Patch)
		Node { ( 0 38 ) ( 1601 1644 ) } // patch (Patch)
		Node { ( 0 39 ) ( 1601 1644 ) } // patch (Patch)
		Node { ( 0 40 ) ( 1601 1644 ) } // patch (Patch)
		Node { ( 0 41 ) ( 1601 1644 ) } // patch (Patch)
		Node { ( 0 42 ) ( 1602 1644 ) } // patch (Patch)
		Node { ( 0 43 ) ( 1602 1644 ) } // brush (Brush)
		Node { ( 0 44 ) ( 1602 1644 ) } // brush (Brush)
		Node { ( 0 45 ) ( 1602 1644 ) } // patch (Patch)
		Node { ( 0 46 ) ( 1602 1644 ) } // patch (Patch)
		Node { ( 0 47 ) ( 1602 1644 ) } // patch (Patch)
		Node { ( 0 48 ) ( 1602 1644 ) } // patch (Patch)
		Node { ( 0 49 ) ( 1602 1644 ) } // patch (Patch)
		Node { ( 0 50 ) ( 1602 1644 ) } // patch (Patch)
		Node { ( 0 51 ) ( 1602 1644 ) } // patch (Patch)
		Node { ( 0 52 ) ( 1602 1644 ) } // patch (Patch)
		Node { ( 0 53 ) ( 1602 1644 ) } // patch (Patch)
		Node { ( 0 54 ) ( 1602 1644 ) } // patch (Patch)
		Node { ( 0 55 ) ( 1602 1644 ) } // patch (Patch)
		Node { ( 0 56 ) ( 1603 1644 ) } // patch (Patch)
		Node { ( 0 57 ) ( 1603 1644 ) } // patch (Patch)
		Node { ( 0 58 ) ( 1603 1644 ) } // patch (Patch)
		Node { ( 0 59 ) ( 1603 1644 ) } // patch (Patch)
		Node { ( 0 60 ) ( 1603 1644 ) } // patch (Patch)
		Node { ( 0 61 ) ( 1603 1644 ) } // patch (Patch)
		Node { ( 0 62 ) ( 1603 1644 ) } // patch (Patch)
		Node { ( 0 63 ) ( 1603 1644 ) } // patch (Patch)
		Node { ( 0 64 ) ( 1603 1644 ) } // patch (Patch)
		Node { ( 0 65 ) ( 1603 1644 ) } // patch (Patch)
		Node { ( 0 66 ) ( 1603 1644 ) } // patch (Patch)
		Node { ( 0 67 ) ( 1603 1644 ) } // patch (Patch)
		Node { ( 0 68 ) ( 1603 1644 ) } // brush (Brush)
		Node { ( 0 69 ) ( 1603 1644 ) } // brush (Brush)
		Node { ( 0 70 ) ( 1644 ) } // brush (Brush)
		Node { ( 0 71 ) ( 1609 1644 ) } // brush (Brush)
		Node { ( 0 72 ) ( 1609 1644 ) } // brush (Brush)
		Node { ( 0 73 ) ( 1609 1644 ) } // patch (Patch)
		Node { ( 0 74 ) ( 1609 1644 ) } // patch (Patch)
		Node { ( 0 75 ) ( 1609 1644 ) } // patch (Patch)
		Node { ( 0 77 ) ( 1629 ) } // brush (Brush)
		Node { ( 0 83 ) ( 1644 ) } // brush (Brush)
		Node { ( 0 84 ) ( 1644 ) } // brush (Brush)
		Node { ( 0 85 ) ( 1608 1644 ) } // brush (Brush)
		Node { ( 0 86 ) ( 1608 1644 ) } // patch (Patch)
		Node { ( 0 87 ) ( 1608 1644 ) } // patch (Patch)
		Node { ( 0 88 ) ( 1608 1644 ) } // patch (Patch)
		Node { ( 0 89 ) ( 1608 1644 ) } // patch (Patch)
		Node { ( 0 90 ) ( 1608 1644 ) } // patch (Patch)
		Node { ( 0 91 ) ( 1608 1644 ) } // brush (Brush)
		Node { ( 0 92 ) ( 1608 1644 ) } // patch (Patch)
		Node { ( 0 93 ) ( 1608 1644 ) } // patch (Patch)
		Node { ( 0 94 ) ( 1608 1644 ) } // patch (Patch)
		Node { ( 0 95 ) ( 1608 1644 ) } // patch (Patch)
		Node { ( 0 96 ) ( 1608 1644 ) } // patch (Patch)
		Node { ( 0 97 ) ( 1608 1644 ) } // patch (Patch)
		Node { ( 0 98 ) ( 1608 1644 ) } // patch (Patch)
		Node { ( 0 99 ) ( 1610 1644 ) } // patch (Patch)
		Node { ( 0 100 ) ( 1610 1644 ) } // patch (Patch)
		Node { ( 0 101 ) ( 1610 1644 ) } // patch (Patch)
		Node { ( 0 102 ) ( 1610 1644 ) } // patch (Patch)
		Node { ( 0 103 ) ( 1610 1644 ) } // patch (Patch)
		Node { ( 0 104 ) ( 1610 1644 ) } // patch (Patch)
		Node { ( 0 105 ) ( 1610 1644 ) } // patch (Patch)
		Node { ( 0 106 ) ( 1610 1644 ) } // patch (Patch)
		Node { ( 0 107 ) ( 1610 1644 ) } // patch (Patch)
		Node { ( 0 108 ) ( 1610 1644 ) } // patch (Patch)
		Node { ( 0 109 ) ( 1610 1644 ) } // patch (Patch)
		Node { ( 0 110 ) ( 1610 1644 ) } // patch (Patch)
		Node { ( 0 111 ) ( 1610 1644 ) } // brush (Brush)
		Node { ( 0 112 ) ( 1610 1644 ) } // brush (Brush)
		Node { ( 0 117 ) ( 1611 ) } // brush (Brush)
		Node { ( 0 118 ) ( 1611 ) } // brush (Brush)
		Node { ( 0 119 ) ( 1611 ) } // brush (Brush)
		Node { ( 0 120 ) ( 1612 ) } // brush (Brush)
		Node { ( 0 121 ) ( 1612 ) } // brush (Brush)
		Node { ( 0 122 ) ( 1612 ) } // brush (Brush)
		Node { ( 0 123 ) ( 1613 ) } // brush (Brush)
		Node { ( 0 124 ) ( 1613 ) } // brush (Brush)
		Node { ( 0 125 ) ( 1613 ) } // brush (Brush)
		Node { ( 0 126 ) ( 1621 ) } // brush (Brush)
		Node { ( 0 127 ) ( 1621 ) } // brush (Brush)
		Node { ( 0 128 ) ( 1621 ) } // brush (Brush)
		Node { ( 0 129 ) ( 1621 ) } // brush (Brush)
		Node { ( 0 131 ) ( 1644 ) } // brush (Brush)
		Node { ( 0 132 ) ( 1617 ) } // brush (Brush)
		Node { ( 0 134 ) ( 1629 ) } // brush (Brush)
		Node { ( 0 135 ) ( 1629 ) } // brush (Brush)
		Node { ( 0 136 ) ( 1629 ) } // brush (Brush)
		Node { ( 0 137 ) ( 1644 ) } // brush (Brush)
		Node { ( 0 138 ) ( 1620 1644 ) } // patch (Patch)
		Node { ( 0 139 ) ( 1620 1644 ) } // patch (Patch)
		Node { ( 0 140 ) ( 1620 1644 ) } // patch (Patch)
		Node { ( 0 141 ) ( 1620 1644 ) } // patch (Patch)
		Node { ( 0 142 ) ( 1620 1644 ) } // patch (Patch)
		Node { ( 0 143 ) ( 1620 1644 ) } // patch (Patch)
		Node { ( 0 144 ) ( 1620 1644 ) } // patch (Patch)
		Node { ( 0 145 ) ( 1620 1644 ) } // patch (Patch)
		Node { ( 0 146 ) ( 1620 1644 ) } // patch (Patch)
		Node { ( 0 147 ) ( 1620 1644 ) } // patch (Patch)
		Node { ( 0 148 ) ( 1620 1644 ) } // patch (Patch)
		Node { ( 0 149 ) ( 1620 1644 ) } // patch (Patch)
		Node { ( 0 150 ) ( 1620 1644 ) } // brush (Brush)
		Node { ( 0 151 ) ( 1620 1644 ) } // brush (Brush)
		Node { ( 0 160 ) ( 1643 ) } // patch (Patch)
		Node { ( 0 162 ) ( 1643 ) } // patch (Patch)
		Node { ( 0 163 ) ( 1643 ) } // patch (Patch)
		Node { ( 0 164 ) ( 1643 ) } // patch (Patch)
		Node { ( 0 165 ) ( 1643 ) } // patch (Patch)
		Node { ( 0 166 ) ( 1643 ) } // patch (Patch)
		Node { ( 0 173 ) ( 1637 ) } // brush (Brush)
		Node { ( 0 174 ) ( 1637 ) } // brush (Brush)
		Node { ( 0 187 ) ( 1644 ) } // brush (Brush)
		Node { ( 0 191 ) ( 1644 ) } // brush (Brush)
		Node { ( 0 197 ) ( 1647 ) } // brush (Brush)
		Node { ( 0 198 ) ( 1647 ) } // brush (Brush)
		Node { ( 0 199 ) ( 1647 ) } // brush (Brush)
		Node { ( 0 210 ) ( 1648 ) } // brush (Brush)
		Node { ( 0 211 ) ( 1648 ) } // brush (Brush)
		Node { ( 0 212 ) ( 1648 ) } // brush (Brush)
		Node { ( 2 ) ( 2 ) } // entity (Objectives)
		Node { ( 3 ) ( 2 ) } // entity (CompassEasy)
		Node { ( 4 ) ( 2 ) } // entity (LanternEasy)
		Node { ( 5 ) ( 2 ) } // entity (SpyglassEasy)
		Node { ( 6 ) ( 2 ) } // entity (HealthPotionsEasy)
		Node { ( 7 ) ( 2 ) } // entity (SwordEasy)
		Node { ( 8 ) ( 2 ) } // entity (BlackjackEasy)
		Node { ( 9 ) ( 2 ) } // entity (BreathPotionsEasy)
		Node { ( 10 ) ( 2 ) } // entity (FlashbombsEasy)
		Node { ( 11 ) ( 2 ) } // entity (key_master)
		Node { ( 12 ) ( 2 ) } // entity (ShopItems)
		Node { ( 13 ) ( 2 ) } // entity (BroadheadsEasy)
		Node { ( 14 ) ( 2 ) } // entity (BroadheadsHard)
		Node { ( 15 ) ( 2 ) } // entity (BroadheadsExpert)
		Node { ( 16 ) ( 2 ) } // entity (FireArrowsEasy)
		Node { ( 17 ) ( 2 ) } // entity (FireArrowsHard)
		Node { ( 18 ) ( 2 ) } // entity (FireArrowsExpert)
		Node { ( 19 ) ( 2 ) } // entity (GasArrowsEasy)
		Node { ( 20 ) ( 2 ) } // entity (GasArrowsHard)
		Node { ( 21 ) ( 2 ) } // entity (GasArrowsExpert)
		Node { ( 22 ) ( 2 ) } // entity (MossArrowsEasy)
		Node { ( 23 ) ( 2 ) } // entity (MossArrowsExpert)
		Node { ( 24 ) ( 2 ) } // entity (MossArrowsHard)
		Node { ( 25 ) ( 2 ) } // entity (NoiseArrowsEasy)
		Node { ( 26 ) ( 2 ) } // entity (NoiseArrowsHard)
		Node { ( 27 ) ( 2 ) } // entity (NoiseArrowsExpert)
		Node { ( 28 ) ( 2 ) } // entity (RopeArrowsEasy)
		Node { ( 29 ) ( 2 ) } // entity (RopeArrowsHard)
		Node { ( 30 ) ( 2 ) } // entity (RopeArrowsExpert)
		Node { ( 31 ) ( 2 ) } // entity (WaterArrowsEasy)
		Node { ( 32 ) ( 2 ) } // entity (WaterArrowsHard)
		Node { ( 33 ) ( 2 ) } // entity (WaterArrowsExpert)
		Node { ( 34 ) ( 2 ) } // entity (BlackjackHard)
		Node { ( 35 ) ( 2 ) } // entity (BlackjackExpert)
		Node { ( 36 ) ( 2 ) } // entity (SwordHard)
		Node { ( 37 ) ( 2 ) } // entity (SwordExpert)
		Node { ( 38 ) ( 2 ) } // entity (CompassHard)
		Node { ( 39 ) ( 2 ) } // entity (CompassExpert)
		Node { ( 40 ) ( 2 ) } // entity (LanternHard)
		Node { ( 41 ) ( 2 ) } // entity (LanternExpert)
		Node { ( 42 ) ( 2 ) } // entity (SpyglassHard)
		Node { ( 43 ) ( 2 ) } // entity (SpyglassExpert)
		Node { ( 44 ) ( 2 ) } // entity (FlashbombsHard)
		Node { ( 45 ) ( 2 ) } // entity (FlashbombsExpert)
		Node { ( 46 ) ( 2 ) } // entity (HealthPotionsHard)
		Node { ( 47 ) ( 2 ) } // entity (HealthPotionsExpert)
		Node { ( 48 ) ( 2 ) } // entity (BreathPotionsHard)
		Node { ( 49 ) ( 2 ) } // entity (BreathPotionsExpert)
		Node { ( 50 ) ( 2 ) } // entity (LockpickSnakeEasy)
		Node { ( 51 ) ( 2 ) } // entity (LockpickTriangleEasy)
		Node { ( 52 ) ( 2 ) } // entity (MinesEasy)
		Node { ( 53 ) ( 2 ) } // entity (HolyWatersEasy)
		Node { ( 54 ) ( 2 ) } // entity (FlashminesEasy)
		Node { ( 55 ) ( 2 ) } // entity (LockpickSnakeHard)
		Node { ( 56 ) ( 2 ) } // entity (LockpickSnakeExpert)
		Node { ( 57 ) ( 2 ) } // entity (LockpickTriangleHard)
		Node { ( 58 ) ( 2 ) } // entity (LockpickTriangleExpert)
		Node { ( 59 ) ( 2 ) } // entity (FlashminesHard)
		Node { ( 60 ) ( 2 ) } // entity (FlashminesExpert)
		Node { ( 61 ) ( 2 ) } // entity (MinesHard)
		Node { ( 62 ) ( 2 ) } // entity (MinesExpert)
		Node { ( 63 ) ( 2 ) } // entity (HolyWatersHard)
		Node { ( 64 ) ( 2 ) } // entity (HolyWatersExpert)
		Node { ( 65 ) ( 2 ) } // entity (VineArrowsEasy)
		Node { ( 66 ) ( 2 ) } // entity (VineArrowsHard)
		Node { ( 67 ) ( 2 ) } // entity (VineArrowsExpert)
		Node { ( 68 ) ( 2 ) } // entity (atdm_location_settings_1)
		Node { ( 70 ) ( 6 ) } // entity (atdm_streetlamp_round_02_lit_1)
		Node { ( 71 ) ( 6 ) } // entity (func_emitter_1)
		Node { ( 73 ) ( 8 ) } // entity (ambient_skybox_fog)
		Node { ( 74 ) ( 8 ) } // entity (light_72)
		Node { ( 75 ) ( 8 ) } // entity (func_static_642)
		Node { ( 76 ) ( 8 ) } // entity (func_static_640)
		Node { ( 77 ) ( 8 ) } // entity (light_71)
		Node { ( 78 ) ( 8 ) } // entity (light_70)
		Node { ( 79 ) ( 8 ) } // entity (info_portalsky_3)
		Node { ( 80 ) ( 1629 ) } // entity (func_static_493)
		Node { ( 81 ) ( 1629 ) } // entity (func_static_486)
		Node { ( 82 ) ( 1629 ) } // entity (func_static_10)
		Node { ( 83 ) ( 1629 ) } // entity (func_static_11)
		Node { ( 84 ) ( 1629 ) } // entity (func_static_12)
		Node { ( 85 ) ( 1629 ) } // entity (func_static_13)
		Node { ( 86 ) ( 1629 ) } // entity (func_static_14)
		Node { ( 87 ) ( 1629 ) } // entity (func_static_15)
		Node { ( 88 ) ( 1629 ) } // entity (func_static_16)
		Node { ( 89 ) ( 1629 ) } // entity (func_static_17)
		Node { ( 90 ) ( 1629 ) } // entity (func_static_18)
		Node { ( 91 ) ( 1629 ) } // entity (func_static_19)
		Node { ( 92 ) ( 1629 ) } // entity (func_static_20)
		Node { ( 93 ) ( 1629 ) } // entity (func_static_21)
		Node { ( 94 ) ( 1629 ) } // entity (func_static_22)
		Node { ( 95 ) ( 1629 ) } // entity (func_static_23)
		Node { ( 96 ) ( 1629 ) } // entity (func_static_24)
		Node { ( 97 ) ( 1629 ) } // entity (func_static_25)
		Node { ( 99 ) ( 1644 ) } // entity (func_static_26)
		Node { ( 100 ) ( 1644 ) } // entity (func_static_28)
		Node { ( 101 ) ( 1644 ) } // entity (func_static_29)
		Node { ( 102 ) ( 1604 1644 ) } // entity (func_static_30)
		Node { ( 103 ) ( 1609 1644 ) } // entity (func_emitter_2)
		Node { ( 104 ) ( 1609 1644 ) } // entity (func_emitter_3)
		Node { ( 105 ) ( 1609 1644 ) } // entity (func_emitter_4)
		Node { ( 106 ) ( 1604 1644 ) } // entity (func_static_31)
		Node { ( 107 ) ( 1644 ) } // entity (func_static_32)
		Node { ( 108 ) ( 1644 ) } // entity (func_static_33)
		Node { ( 109 ) ( 1644 ) } // entity (func_static_1)
		Node { ( 110 ) ( 1644 ) } // entity (atdm_lamp_electric_square_1_lit_1)
		Node { ( 111 ) ( 1611 ) } // entity (func_static_2)
		Node { ( 112 ) ( 1612 ) } // entity (func_static_3)
		Node { ( 113 ) ( 1613 ) } // entity (func_static_4)
		Node { ( 114 ) ( 1621 ) } // entity (func_emitter_5)
		Node { ( 115 ) ( 1617 ) } // entity (func_static_5)
		Node { ( 116 ) ( 1617 ) } // entity (func_static_6)
		Node { ( 117 ) ( 1617 ) } // entity (func_static_7)
		Node { ( 118 ) ( 1617 ) } // entity (func_static_8)
		Node { ( 119 ) ( 1644 ) } // entity (func_static_9)
		Node { ( 120 ) ( 1617 ) } // entity (func_static_27)
		Node { ( 121 ) ( 1617 ) } // entity (func_static_34)
		Node { ( 122 ) ( 1618 ) } // entity (func_static_35)
		Node { ( 123 ) ( 1618 ) } // entity (func_static_36)
		Node { ( 125 ) ( 1629 ) } // entity (func_static_38)
		Node { ( 126 ) ( 1622 ) } // entity (atdm_streetlamp_round_02_lit_2)
		Node { ( 127 ) ( 1622 ) } // entity (func_emitter_6)
		Node { ( 129 473 ) ( 1599 ) } // brush (Brush)
		Node { ( 129 474 ) ( 1599 ) } // brush (Brush)
		Node { ( 129 475 ) ( 1599 ) } // brush (Brush)
		Node { ( 129 476 ) ( 1597 1599 ) } // patch (Patch)
		Node { ( 129 477 ) ( 1597 1599 ) } // patch (Patch)
		Node { ( 129 478 ) ( 1597 1599 ) } // patch (Patch)
		Node { ( 129 479 ) ( 1597 1599 ) } // patch (Patch)
		Node { ( 129 480 ) ( 1597 1599 ) } // patch (Patch)
		Node { ( 129 481 ) ( 1597 1599 ) } // patch (Patch)
		Node { ( 129 482 ) ( 1597 1599 ) } // patch (Patch)
		Node { ( 129 483 ) ( 1597 1599 ) } // patch (Patch)
		Node { ( 130 484 ) ( 1623 ) } // brush (Brush)
		Node { ( 130 485 ) ( 1623 ) } // brush (Brush)
		Node { ( 130 486 ) ( 1623 ) } // brush (Brush)
		Node { ( 130 487 ) ( 1624 1623 ) } // patch (Patch)
		Node { ( 130 488 ) ( 1624 1623 ) } // patch (Patch)
		Node { ( 130 489 ) ( 1624 1623 ) } // patch (Patch)
		Node { ( 130 490 ) ( 1624 1623 ) } // patch (Patch)
		Node { ( 130 491 ) ( 1624 1623 ) } // patch (Patch)
		Node { ( 130 492 ) ( 1624 1623 ) } // patch (Patch)
		Node { ( 130 493 ) ( 1624 1623 ) } // patch (Patch)
		Node { ( 130 494 ) ( 1624 1623 ) } // patch (Patch)
		Node { ( 131 ) ( 1626 ) } // entity (func_static_52)
		Node { ( 132 ) ( 1626 ) } // entity (func_static_42)
		Node { ( 133 ) ( 1626 ) } // entity (func_static_54)
		Node { ( 134 ) ( 1626 ) } // entity (func_static_55)
		Node { ( 135 ) ( 1628 ) } // entity (func_static_45)
		Node { ( 136 ) ( 1628 ) } // entity (func_static_61)
		Node { ( 137 ) ( 1628 ) } // entity (func_static_62)
		Node { ( 138 ) ( 1628 ) } // entity (func_static_63)
		Node { ( 139 ) ( 1630 ) } // entity (func_static_67)
		Node { ( 140 ) ( 1630 ) } // entity (func_static_68)
		Node { ( 141 ) ( 1630 ) } // entity (func_static_69)
		Node { ( 142 ) ( 1630 ) } // entity (func_static_70)
		Node { ( 143 ) ( 1631 ) } // entity (func_static_71)
		Node { ( 144 ) ( 1631 ) } // entity (func_static_72)
		Node { ( 145 ) ( 1631 ) } // entity (func_static_73)
		Node { ( 146 ) ( 1631 ) } // entity (func_static_74)
		Node { ( 147 ) ( 1632 ) } // entity (func_static_80)
		Node { ( 148 ) ( 1632 ) } // entity (func_static_83)
		Node { ( 149 ) ( 1632 ) } // entity (func_static_84)
		Node { ( 150 ) ( 1632 ) } // entity (func_static_86)
		Node { ( 151 ) ( 1634 ) } // entity (func_static_87)
		Node { ( 153 ) ( 1634 ) } // entity (func_static_89)
		Node { ( 155 ) ( 1634 ) } // entity (func_static_94)
		Node { ( 156 ) ( 1634 ) } // entity (func_static_95)
		Node { ( 157 ) ( 1636 ) } // entity (func_static_66)
		Node { ( 158 ) ( 1636 ) } // entity (func_static_97)
		Node { ( 159 ) ( 1636 ) } // entity (func_static_98)
		Node { ( 160 ) ( 1636 ) } // entity (func_static_99)
		Node { ( 161 ) ( 1635 ) } // entity (func_static_102)
		Node { ( 162 ) ( 1635 ) } // entity (func_static_103)
		Node { ( 163 ) ( 1635 ) } // entity (func_static_106)
		Node { ( 164 ) ( 1635 ) } // entity (func_static_107)
		Node { ( 166 ) ( 1642 ) } // entity (func_static_114)
		Node { ( 167 ) ( 1641 ) } // entity (func_static_115)
		Node { ( 168 ) ( 1641 ) } // entity (light_3)
		Node { ( 169 ) ( 1642 ) } // entity (light_2)
		Node { ( 170 ) ( 1640 ) } // entity (func_static_116)
		Node { ( 171 ) ( 1640 ) } // entity (light_4)
		Node { ( 172 ) ( 1639 ) } // entity (func_static_117)
		Node { ( 173 ) ( 1639 ) } // entity (light_5)
		Node { ( 174 ) ( 1645 ) } // entity (func_static_44)
		Node { ( 175 ) ( 1645 ) } // entity (func_static_56)
		Node { ( 203 ) ( 1646 ) } // entity (func_static_53)
		Node { ( 204 ) ( 1646 ) } // entity (func_static_75)
		Node { ( 213 ) ( 1649 ) } // entity (func_static_57)
		Node { ( 214 ) ( 1649 ) } // entity (func_emitter_7)
		Node { ( 215 ) ( 1649 ) } // entity (atdm_liquid_water_1)
		Node { ( 216 ) ( 1649 ) } // entity (atdm_liquid_water_2)
		Node { ( 217 ) ( 1649 ) } // entity (atdm_liquid_water_3)
	}
	Layers
	{
		Layer 0 { Default }
		Layer 1 { trees }
	}
	NodeToLayerMapping
	{
		Node { 0 } // entity (world)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // patch (Patch)
		Node { 0 } // patch (Patch)
		Node { 0 } // patch (Patch)
		Node { 0 } // patch (Patch)
		Node { 0 } // patch (Patch)
		Node { 0 } // patch (Patch)
		Node { 0 } // patch (Patch)
		Node { 0 } // patch (Patch)
		Node { 0 } // patch (Patch)
		Node { 0 } // patch (Patch)
		Node { 0 } // patch (Patch)
		Node { 0 } // patch (Patch)
		Node { 0 } // patch (Patch)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // patch (Patch)
		Node { 0 } // patch (Patch)
		Node { 0 } // patch (Patch)
		Node { 0 } // patch (Patch)
		Node { 0 } // patch (Patch)
		Node { 0 } // patch (Patch)
		Node { 0 } // patch (Patch)
		Node { 0 } // patch (Patch)
		Node { 0 } // patch (Patch)
		Node { 0 } // patch (Patch)
		Node { 0 } // patch (Patch)
		Node { 0 } // patch (Patch)
		Node { 0 } // patch (Patch)
		Node { 0 } // patch (Patch)
		Node { 0 } // patch (Patch)
		Node { 0 } // patch (Patch)
		Node { 0 } // patch (Patch)
		Node { 0 } // patch (Patch)
		Node { 0 } // patch (Patch)
		Node { 0 } // patch (Patch)
		Node { 0 } // patch (Patch)
		Node { 0 } // patch (Patch)
		Node { 0 } // patch (Patch)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // patch (Patch)
		Node { 0 } // patch (Patch)
		Node { 0 } // patch (Patch)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // patch (Patch)
		Node { 0 } // patch (Patch)
		Node { 0 } // patch (Patch)
		Node { 0 } // patch (Patch)
		Node { 0 } // patch (Patch)
		Node { 0 } // brush (Brush)
		Node { 0 } // patch (Patch)
		Node { 0 } // patch (Patch)
		Node { 0 } // patch (Patch)
		Node { 0 } // patch (Patch)
		Node { 0 } // patch (Patch)
		Node { 0 } // patch (Patch)
		Node { 0 } // patch (Patch)
		Node { 0 } // patch (Patch)
		Node { 0 } // patch (Patch)
		Node { 0 } // patch (Patch)
		Node { 0 } // patch (Patch)
		Node { 0 } // patch (Patch)
		Node { 0 } // patch (Patch)
		Node { 0 } // patch (Patch)
		Node { 0 } // patch (Patch)
		Node { 0 } // patch (Patch)
		Node { 0 } // patch (Patch)
		Node { 0 } // patch (Patch)
		Node { 0 } // patch (Patch)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // patch (Patch)
		Node { 0 } // patch (Patch)
		Node { 0 } // patch (Patch)
		Node { 0 } // patch (Patch)
		Node { 0 } // patch (Patch)
		Node { 0 } // patch (Patch)
		Node { 0 } // patch (Patch)
		Node { 0 } // patch (Patch)
		Node { 0 } // patch (Patch)
		Node { 0 } // patch (Patch)
		Node { 0 } // patch (Patch)
		Node { 0 } // patch (Patch)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // patch (Patch)
		Node { 0 } // brush (Brush)
		Node { 0 } // patch (Patch)
		Node { 0 } // patch (Patch)
		Node { 0 } // patch (Patch)
		Node { 0 } // patch (Patch)
		Node { 0 } // patch (Patch)
		Node { 0 } // patch (Patch)
		Node { 0 } // patch (Patch)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // entity (ambient_world)
		Node { 0 } // entity (Objectives)
		Node { 0 } // entity (CompassEasy)
		Node { 0 } // entity (LanternEasy)
		Node { 0 } // entity (SpyglassEasy)
		Node { 0 } // entity (HealthPotionsEasy)
		Node { 0 } // entity (SwordEasy)
		Node { 0 } // entity (BlackjackEasy)
		Node { 0 } // entity (BreathPotionsEasy)
		Node { 0 } // entity (FlashbombsEasy)
		Node { 0 } // entity (key_master)
		Node { 0 } // entity (ShopItems)
		Node { 0 } // entity (BroadheadsEasy)
		Node { 0 } // entity (BroadheadsHard)
		Node { 0 } // entity (BroadheadsExpert)
		Node { 0 } // entity (FireArrowsEasy)
		Node { 0 } // entity (FireArrowsHard)
		Node { 0 } // entity (FireArrowsExpert)
		Node { 0 } // entity (GasArrowsEasy)
		Node { 0 } // entity (GasArrowsHard)
		Node { 0 } // entity (GasArrowsExpert)
		Node { 0 } // entity (MossArrowsEasy)
		Node { 0 } // entity (MossArrowsExpert)
		Node { 0 } // entity (MossArrowsHard)
		Node { 0 } // entity (NoiseArrowsEasy)
		Node { 0 } // entity (NoiseArrowsHard)
		Node { 0 } // entity (NoiseArrowsExpert)
		Node { 0 } // entity (RopeArrowsEasy)
		Node { 0 } // entity (RopeArrowsHard)
		Node { 0 } // entity (RopeArrowsExpert)
		Node { 0 } // entity (WaterArrowsEasy)
		Node { 0 } // entity (WaterArrowsHard)
		Node { 0 } // entity (WaterArrowsExpert)
		Node { 0 } // entity (BlackjackHard)
		Node { 0 } // entity (BlackjackExpert)
		Node { 0 } // entity (SwordHard)
		Node { 0 } // entity (SwordExpert)
		Node { 0 } // entity (CompassHard)
		Node { 0 } // entity (CompassExpert)
		Node { 0 } // entity (LanternHard)
		Node { 0 } // entity (LanternExpert)
		Node { 0 } // entity (SpyglassHard)
		Node { 0 } // entity (SpyglassExpert)
		Node { 0 } // entity (FlashbombsHard)
		Node { 0 } // entity (FlashbombsExpert)
		Node { 0 } // entity (HealthPotionsHard)
		Node { 0 } // entity (HealthPotionsExpert)
		Node { 0 } // entity (BreathPotionsHard)
		Node { 0 } // entity (BreathPotionsExpert)
		Node { 0 } // entity (LockpickSnakeEasy)
		Node { 0 } // entity (LockpickTriangleEasy)
		Node { 0 } // entity (MinesEasy)
		Node { 0 } // entity (HolyWatersEasy)
		Node { 0 } // entity (FlashminesEasy)
		Node { 0 } // entity (LockpickSnakeHard)
		Node { 0 } // entity (LockpickSnakeExpert)
		Node { 0 } // entity (LockpickTriangleHard)
		Node { 0 } // entity (LockpickTriangleExpert)
		Node { 0 } // entity (FlashminesHard)
		Node { 0 } // entity (FlashminesExpert)
		Node { 0 } // entity (MinesHard)
		Node { 0 } // entity (MinesExpert)
		Node { 0 } // entity (HolyWatersHard)
		Node { 0 } // entity (HolyWatersExpert)
		Node { 0 } // entity (VineArrowsEasy)
		Node { 0 } // entity (VineArrowsHard)
		Node { 0 } // entity (VineArrowsExpert)
		Node { 0 } // entity (atdm_location_settings_1)
		Node { 0 } // entity (info_player_start_1)
		Node { 0 } // entity (atdm_streetlamp_round_02_lit_1)
		Node { 0 } // entity (func_emitter_1)
		Node { 0 } // entity (light_1)
		Node { 0 } // entity (ambient_skybox_fog)
		Node { 0 } // entity (light_72)
		Node { 0 } // entity (func_static_642)
		Node { 0 } // patch (Patch)
		Node { 0 } // entity (func_static_640)
		Node { 0 } // patch (Patch)
		Node { 0 } // entity (light_71)
		Node { 0 } // entity (light_70)
		Node { 0 } // entity (info_portalsky_3)
		Node { 0 } // entity (func_static_493)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // entity (func_static_486)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // entity (func_static_10)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // entity (func_static_11)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // entity (func_static_12)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // entity (func_static_13)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // entity (func_static_14)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // entity (func_static_15)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // entity (func_static_16)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // entity (func_static_17)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // entity (func_static_18)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // entity (func_static_19)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // entity (func_static_20)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // entity (func_static_21)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // entity (func_static_22)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // entity (func_static_23)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // entity (func_static_24)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // entity (func_static_25)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // entity (speaker_1)
		Node { 0 } // entity (func_static_26)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // entity (func_static_28)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // entity (func_static_29)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // entity (func_static_30)
		Node { 0 } // entity (func_emitter_2)
		Node { 0 } // entity (func_emitter_3)
		Node { 0 } // entity (func_emitter_4)
		Node { 0 } // entity (func_static_31)
		Node { 0 } // patch (Patch)
		Node { 0 } // entity (func_static_32)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // patch (Patch)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // entity (func_static_33)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // patch (Patch)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // entity (func_static_1)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // entity (atdm_lamp_electric_square_1_lit_1)
		Node { 0 } // entity (func_static_2)
		Node { 0 } // entity (func_static_3)
		Node { 0 } // entity (func_static_4)
		Node { 0 } // entity (func_emitter_5)
		Node { 0 } // entity (func_static_5)
		Node { 0 } // entity (func_static_6)
		Node { 0 } // entity (func_static_7)
		Node { 0 } // entity (func_static_8)
		Node { 0 } // entity (func_static_9)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // patch (Patch)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // entity (func_static_27)
		Node { 0 } // entity (func_static_34)
		Node { 0 } // entity (func_static_35)
		Node { 0 } // entity (func_static_36)
		Node { 0 } // patch (Patch)
		Node { 0 } // entity (func_static_37)
		Node { 0 } // entity (func_static_38)
		Node { 0 } // entity (atdm_streetlamp_round_02_lit_2)
		Node { 0 } // entity (func_emitter_6)
		Node { 0 } // entity (atdm_ai_guard_generic_01b_1)
		Node { 0 } // entity (watch_station_gate)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // patch (Patch)
		Node { 0 } // patch (Patch)
		Node { 0 } // patch (Patch)
		Node { 0 } // patch (Patch)
		Node { 0 } // patch (Patch)
		Node { 0 } // patch (Patch)
		Node { 0 } // patch (Patch)
		Node { 0 } // patch (Patch)
		Node { 0 } // entity (watch_station_gate1)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // patch (Patch)
		Node { 0 } // patch (Patch)
		Node { 0 } // patch (Patch)
		Node { 0 } // patch (Patch)
		Node { 0 } // patch (Patch)
		Node { 0 } // patch (Patch)
		Node { 0 } // patch (Patch)
		Node { 0 } // patch (Patch)
		Node { 0 } // entity (func_static_52)
		Node { 0 } // entity (func_static_42)
		Node { 0 } // entity (func_static_54)
		Node { 0 } // entity (func_static_55)
		Node { 0 } // entity (func_static_45)
		Node { 0 } // entity (func_static_61)
		Node { 0 } // entity (func_static_62)
		Node { 0 } // entity (func_static_63)
		Node { 0 } // entity (func_static_67)
		Node { 0 } // entity (func_static_68)
		Node { 0 } // entity (func_static_69)
		Node { 0 } // entity (func_static_70)
		Node { 0 } // entity (func_static_71)
		Node { 0 } // entity (func_static_72)
		Node { 0 } // entity (func_static_73)
		Node { 0 } // entity (func_static_74)
		Node { 0 } // entity (func_static_80)
		Node { 0 } // entity (func_static_83)
		Node { 0 } // entity (func_static_84)
		Node { 0 } // entity (func_static_86)
		Node { 0 } // entity (func_static_87)
		Node { 0 } // entity (func_static_88)
		Node { 0 } // entity (func_static_89)
		Node { 0 } // entity (func_static_90)
		Node { 0 } // entity (func_static_94)
		Node { 0 } // entity (func_static_95)
		Node { 0 } // entity (func_static_66)
		Node { 0 } // entity (func_static_97)
		Node { 0 } // entity (func_static_98)
		Node { 0 } // entity (func_static_99)
		Node { 0 } // entity (func_static_102)
		Node { 0 } // entity (func_static_103)
		Node { 0 } // entity (func_static_106)
		Node { 0 } // entity (func_static_107)
		Node { 0 } // entity (func_static_109)
		Node { 0 } // entity (func_static_114)
		Node { 0 } // entity (func_static_115)
		Node { 0 } // entity (light_3)
		Node { 0 } // entity (light_2)
		Node { 0 } // entity (func_static_116)
		Node { 0 } // entity (light_4)
		Node { 0 } // entity (func_static_117)
		Node { 0 } // entity (light_5)
		Node { 0 } // entity (func_static_44)
		Node { 0 } // entity (func_static_56)
		Node { 0 } // entity (func_static_119)
		Node { 0 } // entity (func_static_126)
		Node { 0 } // entity (func_static_127)
		Node { 1 } // entity (func_static_110)
		Node { 1 } // entity (func_static_111)
		Node { 1 } // entity (func_static_122)
		Node { 1 } // entity (func_static_131)
		Node { 1 } // entity (func_static_120)
		Node { 1 } // entity (func_static_123)
		Node { 0 } // entity (func_static_134)
		Node { 0 } // entity (func_static_135)
		Node { 1 } // entity (func_static_121)
		Node { 1 } // entity (func_static_133)
		Node { 1 } // entity (func_static_128)
		Node { 1 } // entity (func_static_129)
		Node { 1 } // entity (func_static_125)
		Node { 1 } // entity (func_static_130)
		Node { 1 } // entity (func_static_112)
		Node { 1 } // entity (func_static_124)
		Node { 1 } // entity (func_static_113)
		Node { 1 } // entity (func_static_132)
		Node { 0 } // entity (func_static_136)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // entity (func_static_137)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // entity (func_static_138)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // entity (func_static_39)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // entity (func_static_40)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // entity (func_static_41)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // entity (func_static_53)
		Node { 0 } // entity (func_static_75)
		Node { 0 } // entity (func_static_76)
		Node { 0 } // entity (func_static_46)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // entity (func_static_47)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // entity (func_static_48)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // entity (func_static_43)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // entity (func_static_49)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // entity (func_static_50)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // entity (func_static_51)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // brush (Brush)
		Node { 0 } // entity (func_static_57)
		Node { 0 } // entity (func_emitter_7)
		Node { 0 } // entity (atdm_liquid_water_1)
		Node { 0 } // brush (Brush)
		Node { 0 } // entity (atdm_liquid_water_2)
		Node { 0 } // brush (Brush)
		Node { 0 } // entity (atdm_liquid_water_3)
		Node { 0 } // brush (Brush)
		Node { 0 } // entity (func_static_58)
		Node { 0 } // entity (func_static_59)
		Node { 0 } // entity (func_static_60)
	}
}
